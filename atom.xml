<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Praveen Rathinavelu]]></title>
  <link href="http://prathinavelu.github.io/atom.xml" rel="self"/>
  <link href="http://prathinavelu.github.io/"/>
  <updated>2014-11-10T17:39:49-05:00</updated>
  <id>http://prathinavelu.github.io/</id>
  <author>
    <name><![CDATA[Praveen Rathinavelu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Classifying Individuals by Heart Health]]></title>
    <link href="http://prathinavelu.github.io/blog/2014/10/10/classifying-individuals-by-heart-health/"/>
    <updated>2014-10-10T18:13:06-04:00</updated>
    <id>http://prathinavelu.github.io/blog/2014/10/10/classifying-individuals-by-heart-health</id>
    <content type="html"><![CDATA[<!-- more -->




<div>
#<!DOCTYPE html>
#<meta charset="utf-8">
#<style>

#body {
#  font: 11px sans-serif;
#}

#.axis path,
#.axis line {
#  fill: none;
#  stroke: #000;
#  shape-rendering: crispEdges;
#}

#.x.axis path {
#  display: none;
#}

#.line {
#  fill: none;
#  stroke: steelblue;
#  stroke-width: 2.5px;
#}

#.legend rect {
#  fill:white;
#  stroke:black;
#  opacity:1;
#}


#</style>
#<body>
<script src="http://d3js.org/d3.v3.js"></script>
<script src="http://prathinavelu.github.io/assets/d3.legend.js"></script>
<script>

var margin = {top: 30, right: 150, bottom: 70, left: 75},
    width = 1000 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;


var x = d3.scale.linear()
    .range([0, width])
    .domain([3.7,11]);

var y = d3.scale.linear()
    .range([height, 0]);

var norm = d3.scale.linear().range([0,1])

var color = d3.scale.category20();

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");


var line = d3.svg.line()
    .interpolate("basis")
    .x(function(d) { return x(d.hrs); })
    .y(function(d) { return y(d.val); });

var svg = d3.select(".entry-content").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
    .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")")
    

d3.csv("/assets/bysleepdata.csv", function(error, data) {
  //console.log(data)
  color.domain(d3.keys(data[0]).filter(function(key) { return key !== "hrsleep"; }));

  data.forEach(function(d) {
    d.hrsleep = d.hrsleep;
  });
  
  var features = color.domain().map(function(name) {
    obj = {
      name: name,
      values: data.map(function(d) {
        return +d[name]
        })
    };
    norm.domain([d3.min(obj.values),d3.max(obj.values)])
    obj.normvals = data.map(function(d) {return {hrs: d.hrsleep, val: norm(d[name])} });
    return obj;
  });
  
    console.log("features=", features)



  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis)
      .append("text")
      .style("font-size", "11px")
      .attr("dy", "3em")
      .attr("x", 250)
      .text("Number of Hours of Sleep Per Night");
      
      

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
      .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 100)
      .attr("dy", ".75em")
      .style("text-anchor", "end")
      //.text("% of People");
      
 

  var feature = svg.selectAll(".feature")
      .data(features)
      .enter().append("g")
      .attr("class", "feature");
      //.attr("class", function(d) {return "feature " + d.name});

      
  feature.append("path")
      .attr("class", "line")
      .attr("d", function(d) { console.log('data',d);return line(d.normvals); })
      .attr("data-legend",function(d) { return d.name})
      .on("mouseover", function(d){
            d3.select( this )
            .transition()
            .style( "opacity", 100)
            .style("stroke-width","6px");
            //var getname = d.name;
            var selected = d3.selectAll(".legend").selectAll('.text');
            console.log('nme',selected);
        } )
      .on( "mouseout", function() {
          d3.select( this )
            .transition()
            .style( "opacity", .3 )
            .style("stroke-width","2.5px");
              
        }  )    
      .style("stroke", function(d) { return color(d.name); })
      .style("opacity", .3);
    
    
  svg.append("g")
      .attr("class","legend")
      .attr("transform","translate(8000,20)")
      .style("font-size","10px")
      //.style("opacity", .4)
      .call(d3.legend)

      
      
      
});

</script>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Predicting Box Office Gross for Movie Remakes]]></title>
    <link href="http://prathinavelu.github.io/blog/2014/09/22/predicting-box-office-gross-for-movie-remakes/"/>
    <updated>2014-09-22T15:38:47-04:00</updated>
    <id>http://prathinavelu.github.io/blog/2014/09/22/predicting-box-office-gross-for-movie-remakes</id>
    <content type="html"><![CDATA[<p>This is a test!</p>

<!-- more -->


<p>And another test!!</p>
]]></content>
  </entry>
  
</feed>
